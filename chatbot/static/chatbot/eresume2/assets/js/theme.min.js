var aceOptions={rtl:!1,color:"#d14b4a",progress:{animation:!0,textColor:"inherit",trailColor:"rgba(0,0,0,0.07)"},nav:{height:"auto",arrow:!1},slider:{obj:"",speed:"",dots:!0}},ace={html:"",body:"",mobile:"",themeColor:"",header:{head:"",col1:"",col2:"",col3:""},sidebar:{obj:"",btn:""},nav:{obj:"",tooltip:$('<div class="ace-tooltip"></div>')},overlay:{obj:$('<div id="ace-overlay"></div>')},progress:{lines:"",charts:"",bullets:""}};!function(e){"use strict";function t(){/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?(ace.mobile=!0,ace.html.addClass("ace-mobile")):(ace.mobile=!1,ace.html.addClass("ace-desktop"))}function a(e,t,a,o){var i=t.find("#ace-logo").width()+15,s=o.find("#ace-sidebar-btn").width()+15;e.hasClass("ace-head-boxed")&&e.hasClass("ace-logo-out")||e.hasClass("ace-head-full")&&a.hasClass("text-center")?i>=s&&(t.width(i),o.width(i)):(t.width(i),o.width(s))}function o(){ace.body.append(ace.overlay.obj),ace.overlay.obj[0].style.opacity=0,window.getComputedStyle(ace.overlay.obj[0]).opacity,ace.overlay.obj[0].style.opacity=1}function i(){ace.overlay.obj[0].style.opacity=0,ace.overlay.obj.remove()}function s(){var e=ace.html.outerWidth(),t=ace.body.outerHeight(),a=[self.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft,self.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop];ace.html.data("scroll-position",a),ace.html.data("previous-overflow",ace.html.css("overflow")),ace.html.css("overflow","hidden"),window.scrollTo(a[0],a[1]);var o=ace.body.outerWidth()-e,i=ace.body.outerHeight()-t;ace.body.css({"margin-right":o,"margin-bottom":i}),ace.html.addClass("ace-lock-scroll")}function r(){ace.html.css("overflow",ace.html.data("previous-overflow"));var e=ace.html.data("scroll-position");window.scrollTo(e[0],e[1]),ace.body.css({"margin-right":0,"margin-bottom":0}),ace.html.removeClass("ace-lock-scroll")}function l(){ace.html.addClass("ace-sidebar-opened"),o(),s()}function n(){ace.html.removeClass("ace-sidebar-opened"),i(),r()}function c(e,t,a,o){var i=new ProgressBar.Circle(e,{color:aceOptions.color,strokeWidth:5,trailWidth:0,text:{value:t,className:"progress-text",style:{top:"50%",left:"50%",color:aceOptions.progress.textColor,position:"absolute",margin:0,padding:0,transform:{prefix:!0,value:"translate(-50%, -50%)"}},autoStyleContainer:!0,alignToBottom:!0},svgStyle:{display:"block",width:"100%"},duration:o,easing:"easeOut"});i.animate(a)}function d(e,t,a,o){var i=new ProgressBar.Line(e,{strokeWidth:4,easing:"easeInOut",duration:o,color:aceOptions.color,trailColor:aceOptions.progress.trailColor,trailWidth:4,svgStyle:{width:"100%",height:"100%"},text:{value:t,className:"progress-text",style:{top:"-25px",right:"0",color:aceOptions.progress.textColor,position:"absolute",margin:0,padding:0,transform:{prefix:!0,value:"translate(0, 0)"}},autoStyleContainer:!0}});i.animate(a)}function p(e,t){var a=e[0].getBoundingClientRect();return a.bottom>=0&&a.right>=0&&a.top+t<=(window.innerHeight||document.documentElement.clientHeight)&&a.left<=(window.innerWidth||document.documentElement.clientWidth)}function f(t,a){for(var o=0;o<t.length;o++){var i=e(t[o]);if(i.hasClass("ace-animate")&&p(i,a)){if(i.removeClass("ace-animate").addClass("ace-animated"),i.hasClass("progress-chart")){var s=i.find(".progress-bar");c(s[0],s.data("text"),s.data("value"),1e3)}if(i.hasClass("progress-line")){var r=i.find(".progress-bar");d(r[0],r.data("text"),r.data("value"),1e3)}}}}function h(t,a){f(t,a),e(window).scroll(function(){f(t,a)}),e(window).resize(function(){f(t,a)})}function u(){var t,a=44.5403,o=-78.5463,i=e("#map"),s=i.get(0),r=[{elementType:"labels.text",stylers:[{visibility:"off"}]},{featureType:"landscape.natural",elementType:"geometry.fill",stylers:[{color:"#f5f5f2"},{visibility:"on"}]},{featureType:"administrative",stylers:[{visibility:"off"}]},{featureType:"transit",stylers:[{visibility:"off"}]},{featureType:"poi.attraction",stylers:[{visibility:"off"}]},{featureType:"landscape.man_made",elementType:"geometry.fill",stylers:[{color:"#ffffff"},{visibility:"on"}]},{featureType:"poi.business",stylers:[{visibility:"off"}]},{featureType:"poi.medical",stylers:[{visibility:"off"}]},{featureType:"poi.place_of_worship",stylers:[{visibility:"off"}]},{featureType:"poi.school",stylers:[{visibility:"off"}]},{featureType:"poi.sports_complex",stylers:[{visibility:"off"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#ffffff"},{visibility:"simplified"}]},{featureType:"road.arterial",stylers:[{visibility:"simplified"},{color:"#ffffff"}]},{featureType:"road.highway",elementType:"labels.icon",stylers:[{color:"#ffffff"},{visibility:"off"}]},{featureType:"road.highway",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"road.arterial",stylers:[{color:"#ffffff"}]},{featureType:"road.local",stylers:[{color:"#ffffff"}]},{featureType:"poi.park",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"poi",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"water",stylers:[{color:"#71c8d4"}]},{featureType:"landscape",stylers:[{color:"#e5e8e7"}]},{featureType:"poi.park",stylers:[{color:"#8ba129"}]},{featureType:"road",stylers:[{color:"#ffffff"}]},{featureType:"poi.sports_complex",elementType:"geometry",stylers:[{color:"#c7c7c7"},{visibility:"off"}]},{featureType:"water",stylers:[{color:"#a0d3d3"}]},{featureType:"poi.park",stylers:[{color:"#91b65d"}]},{featureType:"poi.park",stylers:[{gamma:1.51}]},{featureType:"road.local",stylers:[{visibility:"off"}]},{featureType:"road.local",elementType:"geometry",stylers:[{visibility:"on"}]},{featureType:"poi.government",elementType:"geometry",stylers:[{visibility:"off"}]},{featureType:"landscape",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{visibility:"simplified"}]},{featureType:"road.local",stylers:[{visibility:"simplified"}]},{featureType:"road"},{featureType:"road"},{},{featureType:"road.highway"}];i.data("latitude")&&(a=i.data("latitude")),i.data("longitude")&&(o=i.data("longitude")),t=new google.maps.LatLng(a,o);var l={zoom:14,center:t,scrollwheel:!0,mapTypeId:google.maps.MapTypeId.ROADMAP,styles:r};i=new google.maps.Map(s,l),google.maps.event.addDomListener(window,"resize",function(){i.setCenter(t)})}e(function(){if(ace.html=e("html"),ace.body=e("body"),t(),ace.header.head=e("#ace-header"),ace.header.col1=e("#ace-head-col1"),ace.header.col2=e("#ace-head-col2"),ace.header.col3=e("#ace-head-col3"),a(ace.header.head,ace.header.col1,ace.header.col2,ace.header.col3),ace.html.hasClass("ace-tab-nav-on")>0){Modernizr.mq("(min-width: 992px)")&&"auto"!==aceOptions.nav.height&&(ace.nav.obj=e("#ace-nav-scroll"),ace.nav.obj.height(ace.nav.obj.height()).animate({height:aceOptions.nav.height},700,function(){ace.nav.obj.mCustomScrollbar({axis:"y",scrollbarPosition:"outside"}),aceOptions.nav.arrow&&(e("#ace-nav-tools").removeClass("hidden"),e("#ace-nav-arrow").on("click",function(){e("#ace-nav-scroll").mCustomScrollbar("scrollTo","-=300")}))}));var o,i;e("#ace-nav a").hover(function(){var t=e(this);o=setTimeout(function(){i=e('<div class="ace-tooltip"></div>');var a=t.offset().top,o=t.offset().left,s=o+t.outerWidth(),r=(t.outerWidth(),0);ace.body.append(i),i.text(t.data("tooltip")),s+i.outerWidth()<e(window).width()?i.addClass("arrow-left").css({left:s+"px",top:a+r+"px"}):i.addClass("arrow-right").css({left:o-i.outerWidth()-10+"px",top:a+r+"px"}),i.fadeIn(300)},300)},function(){clearTimeout(o),"undefined"!=typeof i&&i.fadeOut(300,function(){i.remove()})})}if(e("#ace-main-nav-sm .has-sub-menu > a").on("click touchstart",function(){return!!e(this).hasClass("hover")||(e(this).addClass("hover"),e(this).next().slideDown(500),!1)}),ace.sidebar.obj=e("#ace-sidebar"),ace.sidebar.btn=e("#ace-sidebar-btn"),ace.sidebar.btn.on("touchstart click",function(){l()}),e(document).on("touchstart click",".ace-sidebar-opened #ace-overlay",function(e){var t=ace.sidebar.obj;t.is(e.target)||0!==t.has(e.target).length||n()}),e("#ace-sidebar-close").on("click",function(){n()}),e("#ace-sidebar-inner").mCustomScrollbar({axis:"y",theme:"minimal-dark",autoHideScrollbar:!0,scrollButtons:{enable:!0}}),!aceOptions.progress.animation||ace.mobile){ace.progress.charts=e(".progress-chart .progress-bar");for(var p=0;p<ace.progress.charts.length;p++){var f=e(ace.progress.charts[p]);c(f[0],f.data("text"),f.data("value"),1)}ace.progress.lines=e(".progress-line .progress-bar");for(var p=0;p<ace.progress.lines.length;p++){var v=e(ace.progress.lines[p]);d(v[0],v.data("text"),v.data("value"),1)}}aceOptions.progress.animation&&!ace.mobile&&h(e(".ace-animate"),150),e("pre").each(function(e,t){hljs.highlightBlock(t)}),e(".alert .close").on("click",function(){var t=e(this).parent();t.fadeOut(500,function(){t.remove()})}),e(".slider").slick({dots:!0}),e("#map").length>0&&u();var y=e(".tabs-menu>li.active");if(y.length>0)for(var p=0;p<y.length;p++){var m=e(y[p]).children().attr("href");e(m).addClass("active").show()}e(".tabs-menu a").on("click",function(t){var a=e(this),o=a.attr("href"),i=a.closest(".tabs"),s=i.find(".tab-content");a.parent().addClass("active"),a.parent().siblings().removeClass("active"),s.not(o).removeClass("active").hide(),e(o).addClass("active").fadeIn(500),t.preventDefault()});var g=e(".togglebox>li.active");g.length>0&&g.find(".togglebox-content").show(),e(".togglebox-header").on("click",function(){var t=e(this);t.next(".togglebox-content").slideToggle(300),t.parent().toggleClass("active")});var b=e(".accordion>li.active");b.length>0&&b.find(".accordion-content").show(),e(".accordion-header").on("click",function(){var t=e(this),a=t.parent(),o=t.next(),i=t.closest(".accordion").find(".accordion-content");a.hasClass("active")?(a.removeClass("active"),o.slideUp()):(a.siblings().removeClass("active"),a.addClass("active"),i.slideUp(300),o.slideDown(300))}),e(".comment-replys-link").on("click",function(){return e(this).closest(".comment").toggleClass("show-replies"),!1});var w={};w.wrapper=null,w.content=null,w.slider=null,w.open=function(t){this.wrapper=e('<div id="pf-popup-wrap" class="pf-popup-wrap"><div class="pf-popup-inner"><div class="pf-popup-middle"><div class="pf-popup-container"><button id="pf-popup-close"><i class="rsicon rsicon-close"></i></button><div id="pf-popup-content" class="pf-popup-content"></div></div></div></div>'),ace.body.append(this.wrapper),this.content=e("#pf-popup-content"),this.content.append(t.clone()),w.wrapper.addClass("opened"),s()},w.close=function(){this.wrapper.removeClass("opened"),setTimeout(function(){w.wrapper.remove(),r()},500)},e(document).on("click",".pf-btn-view",function(){var t=e(this).attr("href");return w.open(e(t)),ace.html.addClass("ace-portfolio-opened"),!1}),e(document).on("touchstart click",".ace-portfolio-opened #pf-popup-wrap",function(t){var a=e("#pf-popup-content");a.is(t.target)||0!==a.has(t.target).length||(w.close(),ace.html.removeClass("ace-portfolio-opened"))}),e(".toggle-link").on("click",function(){var t=e(this).attr("href");return e(this).hasClass("opened")?(e(t).slideUp(500),e(this).removeClass("opened")):(e(t).slideDown(500),e(this).addClass("opened")),!1}),e("#btn-share").on("mouseenter",function(){e(this).parent().addClass("hovered")}),e(".ace-share-box").on("mouseleave",function(){var t=e(this);t.hasClass("hovered")&&(t.addClass("closing"),setTimeout(function(){t.removeClass("hovered"),t.removeClass("closing")},300))})}),e(window).on("resize",function(){a(ace.header.head,ace.header.col1,ace.header.col2,ace.header.col3)}),e(window).on("load",function(){var t=e(".pf-grid");if(t.length>0){var a=t.isotope({isOriginLeft:!aceOptions.rtl,itemSelector:".pf-grid-item",percentPosition:!0,masonry:{columnWidth:".pf-grid-sizer"}}),o=e(".pf-filter");if(o.length>0){var i=o.find("button"),s=e(".pf-filter button:first-child");s.addClass("active"),i.on("click",function(){i.removeClass("active"),e(this).addClass("active");var t=e(this).attr("data-filter");a.isotope({filter:t})})}t.addClass("loaded")}})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
